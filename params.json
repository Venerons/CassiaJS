{"tagline":"JavaScript Cryptography Library","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"CassiaJS","body":"_Copyright (c) 2012 Daniele Veneroni. Released under MIT License._\r\n\r\nCassiaJS is a JavaScript library to encrypt/decrypt text with various cryptographic algoritms.\r\n\r\nTo import the library, use this code between the head tags on your page:\r\n\r\n\t<script src=\"cassia.min.js\"></script>\r\n\r\nThe library is called by using `CassiaJS` followed by the cipher name and the methods encrypt/decrypt.\r\n\r\n## API\r\n\r\n### Substitution Ciphers\r\n\r\nGeneric Substitution Cipher:\r\n\t\r\n\t// alfa is the original set of chars that can be encrypted, i.e. alfa = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\r\n\t// beta is the new set of chars, i.e. beta = \"DEFGHIJKLMNOPQRSTUVWXYZABCdefghijklmnopqrstuvwxyz\"\r\n\t// with the alfa and beta of this example, A = D, b = e, etc.\r\n\tvar encrypted = CassiaJS.substitution.encrypt(\"Message\", alfa, beta); \r\n\tvar decrypted = CassiaJS.substitution.decrypt(\"Message\", alfa, beta);\r\n\r\nAdditive Cipher:\r\n\t\r\n\t// shift must be a number, i.e. shift = 5\r\n\tvar encrypted = CassiaJS.additive.encrypt(\"Message\", shift); \r\n\tvar decrypted = CassiaJS.additive.decrypt(\"Message\", shift);\r\n\r\nAlbam Cipher:\r\n\r\n\tvar encrypted = CassiaJS.albam.encrypt(\"Message\");\r\n\tvar decrypted = CassiaJS.albam.decrypt(\"Message\");\r\n\r\nAlfabeto Carbonaro:\r\n\r\n\tvar encrypted = CassiaJS.carbonaro.encrypt(\"Message\");\r\n\tvar decrypted = CassiaJS.carbonaro.decrypt(\"Message\");\r\n\r\nAtbash:\r\n\r\n\tvar encrypted = CassiaJS.atbash.encrypt(\"Message\");\r\n\tvar decrypted = CassiaJS.atbash.decrypt(\"Message\");\r\n\r\nCesare Cipher (Caesar Cipher):\r\n\r\n\tvar encrypted = CassiaJS.cesare.encrypt(\"Message\");\r\n\tvar decrypted = CassiaJS.cesare.decrypt(\"Message\");\r\n\r\nPizzini:\r\n\r\n\tvar encrypted = CassiaJS.pizzini.encrypt(\"Message\"); \r\n\tvar decrypted = CassiaJS.pizzini.decrypt(\"Message\");\r\n\r\nPolibio Cipher:\r\n\r\n\tvar encrypted = CassiaJS.polibio.encrypt(\"Message\"); \r\n\tvar decrypted = CassiaJS.polibio.decrypt(\"Message\");\r\n\r\nROT-13:\r\n\r\n\tvar encrypted = CassiaJS.rot13.encrypt(\"Message\"); \r\n\tvar decrypted = CassiaJS.rot13.decrypt(\"Message\");\r\n\r\nT9 (only encrypt):\r\n\r\n\tvar encrypted = CassiaJS.t9.encrypt(\"Message\");\r\n\r\nPollux Cipher:\r\n\r\n\t// chpoint, chline, chpuls are three string variables that contains the characters for point, line and plus symbols.\r\n\t// i.e. chpoint = \"ADGJMPSVYcfilorux\"\r\n\t// i.e. chlint = \"BEHKNQTWZadgjmpsvy\"\r\n\t// i.e. chplus = \"CFILORUXbehknqtwz\"\r\n\tvar encrypted = CassiaJS.pollux.encrypt(\"Message\", chpoint, chline, chplus); \r\n\tvar decrypted = CassiaJS.pollux.decrypt(\"Message\", chpoint, chline, chplus);\r\n\r\n### Polyalphabetic Ciphers\r\n\r\nOne-Time Pad (Vernam Cipher):\r\n\r\n\tvar encrypted = CassiaJS.onetimepad.encrypt(\"Message\", \"key\"); \r\n\tvar decrypted = CassiaJS.onetimepad.decrypt(\"Message\", \"key\");\r\n\r\nVIC Cipher:\r\n\r\n\t// key is a string variable that must containt only numeric characters, i.e. key = \"1234567890\"\r\n\tvar encrypted = CassiaJS.vic.encrypt(\"Message\", key); \r\n\tvar decrypted = CassiaJS.vic.decrypt(\"Message\", key);\r\n\r\n### Not really ciphers\r\n\r\nBinary Encode:\r\n\r\n\tvar encrypted = CassiaJS.binary.encrypt(\"Message\");\r\n\tvar decrypted = CassiaJS.binary.decrypt(\"Message\");\r\n\r\nLeet (only encrypt):\r\n\r\n\tvar baseencrypted = CassiaJS.leet.encrypt(\"Message\", \"base\");\r\n\tvar advancedencrypted = CassiaJS.leet.encrypt(\"Message\", \"advanced\");\r\n\r\nMorse Code:\r\n\r\n\t// separator must be a character, i.e. separator = \" \" or separator = \"+\"\r\n\tvar encrypted = CassiaJS.morse.encrypt(\"Message\", separator); \r\n\tvar decrypted = CassiaJS.morse.decrypt(\"Message\", separator);","google":""}